// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cpg {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class ExpressionTreeIter : GLib.Opaque {

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_substitute(IntPtr raw, IntPtr property, IntPtr subst);

		public Cpg.ExpressionTreeIter Substitute(Cpg.Property property, Cpg.ExpressionTreeIter subst) {
			IntPtr raw_ret = cpg_expression_tree_iter_substitute(Handle, property == null ? IntPtr.Zero : property.Handle, subst == null ? IntPtr.Zero : subst.Handle);
			Cpg.ExpressionTreeIter ret = raw_ret == IntPtr.Zero ? null : (Cpg.ExpressionTreeIter) GLib.Opaque.GetOpaque (raw_ret, typeof (Cpg.ExpressionTreeIter), false);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_to_string(IntPtr raw);

		public override string ToString() {
			IntPtr raw_ret = cpg_expression_tree_iter_to_string(Handle);
			string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern bool cpg_expression_tree_iter_equal(IntPtr raw, IntPtr other);

		public bool Equal(Cpg.ExpressionTreeIter other) {
			bool raw_ret = cpg_expression_tree_iter_equal(Handle, other == null ? IntPtr.Zero : other.Handle);
			bool ret = raw_ret;
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern int cpg_expression_tree_iter_num_children(IntPtr raw);

		public int NumChildren() {
			int raw_ret = cpg_expression_tree_iter_num_children(Handle);
			int ret = raw_ret;
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_expression_tree_iter_set_child(IntPtr raw, int nth, IntPtr child);

		public void SetChild(int nth, Cpg.ExpressionTreeIter child) {
			cpg_expression_tree_iter_set_child(Handle, nth, child == null ? IntPtr.Zero : child.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_canonicalize(IntPtr raw);

		public Cpg.ExpressionTreeIter Canonicalize() {
			IntPtr raw_ret = cpg_expression_tree_iter_canonicalize(Handle);
			Cpg.ExpressionTreeIter ret = raw_ret == IntPtr.Zero ? null : (Cpg.ExpressionTreeIter) GLib.Opaque.GetOpaque (raw_ret, typeof (Cpg.ExpressionTreeIter), false);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_to_instructions(IntPtr raw);

		public GLib.SList ToInstructions() {
			IntPtr raw_ret = cpg_expression_tree_iter_to_instructions(Handle);
			GLib.SList ret = new GLib.SList(raw_ret);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_simplify(IntPtr raw);

		public Cpg.ExpressionTreeIter Simplify() {
			IntPtr raw_ret = cpg_expression_tree_iter_simplify(Handle);
			Cpg.ExpressionTreeIter ret = raw_ret == IntPtr.Zero ? null : (Cpg.ExpressionTreeIter) GLib.Opaque.GetOpaque (raw_ret, typeof (Cpg.ExpressionTreeIter), false);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_to_string_dbg(IntPtr raw);

		public string ToStringDbg() {
			IntPtr raw_ret = cpg_expression_tree_iter_to_string_dbg(Handle);
			string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_expression_tree_iter_take_child(IntPtr raw, int nth, IntPtr child);

		public void TakeChild(int nth, Cpg.ExpressionTreeIter child) {
			cpg_expression_tree_iter_take_child(Handle, nth, child == null ? IntPtr.Zero : child.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern unsafe IntPtr cpg_expression_tree_iter_solve_for(IntPtr raw, IntPtr prop, out IntPtr error);

		public unsafe Cpg.ExpressionTreeIter SolveFor(Cpg.Property prop) {
			IntPtr error = IntPtr.Zero;
			IntPtr raw_ret = cpg_expression_tree_iter_solve_for(Handle, prop == null ? IntPtr.Zero : prop.Handle, out error);
			Cpg.ExpressionTreeIter ret = raw_ret == IntPtr.Zero ? null : (Cpg.ExpressionTreeIter) GLib.Opaque.GetOpaque (raw_ret, typeof (Cpg.ExpressionTreeIter), false);
			if (error != IntPtr.Zero) throw new GLib.GException (error);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_substitute_hash(IntPtr raw, System.IntPtr table);

		public Cpg.ExpressionTreeIter SubstituteHash(System.IntPtr table) {
			IntPtr raw_ret = cpg_expression_tree_iter_substitute_hash(Handle, table);
			Cpg.ExpressionTreeIter ret = raw_ret == IntPtr.Zero ? null : (Cpg.ExpressionTreeIter) GLib.Opaque.GetOpaque (raw_ret, typeof (Cpg.ExpressionTreeIter), false);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_get_child(IntPtr raw, int nth);

		public Cpg.ExpressionTreeIter GetChild(int nth) {
			IntPtr raw_ret = cpg_expression_tree_iter_get_child(Handle, nth);
			Cpg.ExpressionTreeIter ret = raw_ret == IntPtr.Zero ? null : (Cpg.ExpressionTreeIter) GLib.Opaque.GetOpaque (raw_ret, typeof (Cpg.ExpressionTreeIter), false);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_copy(IntPtr raw);

		public Cpg.ExpressionTreeIter Copy() {
			IntPtr raw_ret = cpg_expression_tree_iter_copy(Handle);
			Cpg.ExpressionTreeIter ret = raw_ret == IntPtr.Zero ? null : (Cpg.ExpressionTreeIter) GLib.Opaque.GetOpaque (raw_ret, typeof (Cpg.ExpressionTreeIter), true);
			return ret;
		}

		public ExpressionTreeIter(IntPtr raw) : base(raw) {}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_new(IntPtr expression);

		public ExpressionTreeIter (Cpg.Expression expression) 
		{
			Raw = cpg_expression_tree_iter_new(expression == null ? IntPtr.Zero : expression.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_new_from_instruction(IntPtr instruction);

		public ExpressionTreeIter (Cpg.Instruction instruction) 
		{
			Raw = cpg_expression_tree_iter_new_from_instruction(instruction == null ? IntPtr.Zero : instruction.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_new_from_instructions(IntPtr instructions);

		public ExpressionTreeIter (GLib.SList instructions) 
		{
			Raw = cpg_expression_tree_iter_new_from_instructions(instructions == null ? IntPtr.Zero : instructions.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_expression_tree_iter_free(IntPtr raw);

		protected override void Free (IntPtr raw)
		{
			cpg_expression_tree_iter_free (raw);
		}

		class FinalizerInfo {
			IntPtr handle;

			public FinalizerInfo (IntPtr handle)
			{
				this.handle = handle;
			}

			public bool Handler ()
			{
				cpg_expression_tree_iter_free (handle);
				return false;
			}
		}

		~ExpressionTreeIter ()
		{
			if (!Owned)
				return;
			FinalizerInfo info = new FinalizerInfo (Handle);
			GLib.Timeout.Add (50, new GLib.TimeoutHandler (info.Handler));
		}

#endregion
#region Customized extensions
#line 1 "ExpressionTreeIter.custom"
		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_expression_tree_iter_get_instruction(IntPtr raw);

		[DllImport("cpg-network-2.0")]
		static extern void cpg_expression_tree_iter_set_instruction(IntPtr raw, IntPtr instruction);

		public Cpg.Instruction Instruction
		{
			get
			{
				IntPtr raw_ret = cpg_expression_tree_iter_get_instruction(Handle);

				return (Cpg.Instruction)MiniObject.GetObject(raw_ret);
			}
			set
			{
				cpg_expression_tree_iter_set_instruction(Handle, value.Handle);
			}
		}

#endregion
	}
}
