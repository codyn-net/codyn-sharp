// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cpg {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Selection : GLib.Object {

		[Obsolete]
		protected Selection(GLib.GType gtype) : base(gtype) {}
		public Selection(IntPtr raw) : base(raw) {}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_selection_new(IntPtr objekt, IntPtr expansions);

		public Selection (IntPtr objekt, GLib.SList expansions) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (Selection)) {
				throw new InvalidOperationException ("Can't override this constructor.");
			}
			Raw = cpg_selection_new(objekt, expansions == null ? IntPtr.Zero : expansions.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_selection_copy(IntPtr raw);

		public Cpg.Selection Copy() {
			IntPtr raw_ret = cpg_selection_copy(Handle);
			Cpg.Selection ret = GLib.Object.GetObject(raw_ret, true) as Cpg.Selection;
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_selection_get_expansions(IntPtr raw);

		public GLib.SList Expansions { 
			get {
				IntPtr raw_ret = cpg_selection_get_expansions(Handle);
				GLib.SList ret = new GLib.SList(raw_ret);
				return ret;
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_selection_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = cpg_selection_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_selection_get_object(IntPtr raw);

		public IntPtr Object { 
			get {
				IntPtr raw_ret = cpg_selection_get_object(Handle);
				IntPtr ret = raw_ret;
				return ret;
			}
		}

#endregion
	}
}
