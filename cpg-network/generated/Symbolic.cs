// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cpg {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Symbolic {

		[DllImport("cpg-network-2.0")]
		static extern unsafe IntPtr cpg_symbolic_derive(IntPtr expression, IntPtr symbols, System.IntPtr property_map, System.IntPtr diff_map, int order, int flags, out IntPtr error);

		public static unsafe Cpg.Expression Derive(Cpg.Expression expression, GLib.SList symbols, System.IntPtr property_map, System.IntPtr diff_map, int order, Cpg.SymbolicDeriveFlags flags) {
			IntPtr error = IntPtr.Zero;
			IntPtr raw_ret = cpg_symbolic_derive(expression == null ? IntPtr.Zero : expression.Handle, symbols == null ? IntPtr.Zero : symbols.Handle, property_map, diff_map, order, (int) flags, out error);
			Cpg.Expression ret = GLib.Object.GetObject(raw_ret) as Cpg.Expression;
			if (error != IntPtr.Zero) throw new GLib.GException (error);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern int cpg_symbolic_error_quark();

		public static int ErrorQuark() {
			int raw_ret = cpg_symbolic_error_quark();
			int ret = raw_ret;
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_symbolic_simplify(IntPtr expression);

		public static Cpg.Expression Simplify(Cpg.Expression expression) {
			IntPtr raw_ret = cpg_symbolic_simplify(expression == null ? IntPtr.Zero : expression.Handle);
			Cpg.Expression ret = GLib.Object.GetObject(raw_ret) as Cpg.Expression;
			return ret;
		}

#endregion
	}
}
