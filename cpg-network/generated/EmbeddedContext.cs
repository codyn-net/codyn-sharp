// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cpg {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class EmbeddedContext : GLib.Object {

		[Obsolete]
		protected EmbeddedContext(GLib.GType gtype) : base(gtype) {}
		public EmbeddedContext(IntPtr raw) : base(raw) {}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_embedded_context_new();

		public EmbeddedContext () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (EmbeddedContext)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = cpg_embedded_context_new();
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_embedded_context_lookup_expansion(IntPtr raw, int depth);

		public Cpg.Expansion LookupExpansion(int depth) {
			IntPtr raw_ret = cpg_embedded_context_lookup_expansion(Handle, depth);
			Cpg.Expansion ret = GLib.Object.GetObject(raw_ret) as Cpg.Expansion;
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_embedded_context_lookup_define(IntPtr raw, IntPtr name);

		public string LookupDefine(string name) {
			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);
			IntPtr raw_ret = cpg_embedded_context_lookup_define(Handle, native_name);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_name);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_embedded_context_calculate(IntPtr raw, IntPtr equation);

		public string Calculate(string equation) {
			IntPtr native_equation = GLib.Marshaller.StringToPtrGStrdup (equation);
			IntPtr raw_ret = cpg_embedded_context_calculate(Handle, native_equation);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			GLib.Marshaller.Free (native_equation);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_embedded_context_define(IntPtr raw, IntPtr name, IntPtr value);

		public void Define(string name, string value) {
			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);
			IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
			cpg_embedded_context_define(Handle, native_name, native_value);
			GLib.Marshaller.Free (native_name);
			GLib.Marshaller.Free (native_value);
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_embedded_context_push_expansions(IntPtr raw, IntPtr expansions);

		public void PushExpansions(GLib.SList expansions) {
			cpg_embedded_context_push_expansions(Handle, expansions == null ? IntPtr.Zero : expansions.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_embedded_context_pop_define(IntPtr raw);

		public void PopDefine() {
			cpg_embedded_context_pop_define(Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_embedded_context_get_expansions(IntPtr raw);

		[DllImport("cpg-network-2.0")]
		static extern void cpg_embedded_context_set_expansions(IntPtr raw, IntPtr expansions);

		public GLib.SList Expansions { 
			get {
				IntPtr raw_ret = cpg_embedded_context_get_expansions(Handle);
				GLib.SList ret = new GLib.SList(raw_ret);
				return ret;
			}
			set {
				cpg_embedded_context_set_expansions(Handle, value == null ? IntPtr.Zero : value.Handle);
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_embedded_context_push_define(IntPtr raw);

		public void PushDefine() {
			cpg_embedded_context_push_define(Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_embedded_context_push_expansion(IntPtr raw, IntPtr expansion);

		public void PushExpansion(Cpg.Expansion expansion) {
			cpg_embedded_context_push_expansion(Handle, expansion == null ? IntPtr.Zero : expansion.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_embedded_context_pop_expansions(IntPtr raw);

		public void PopExpansions() {
			cpg_embedded_context_pop_expansions(Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_embedded_context_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = cpg_embedded_context_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

#endregion
	}
}
