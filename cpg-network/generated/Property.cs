// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cpg {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class Property : GLib.Object {

		[Obsolete]
		protected Property(GLib.GType gtype) : base(gtype) {}
		public Property(IntPtr raw) : base(raw) {}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_property_new(IntPtr name, IntPtr expression, int flags, IntPtr objekt);

		public Property (string name, string expression, Cpg.PropertyFlags flags, Cpg.Object objekt) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (Property)) {
				ArrayList vals = new ArrayList();
				ArrayList names = new ArrayList();
				names.Add ("name");
				vals.Add (new GLib.Value (name));
				names.Add ("expression");
				vals.Add (new GLib.Value (expression));
				names.Add ("flags");
				vals.Add (new GLib.Value (flags));
				if (objekt != null) {
					names.Add ("objekt");
					vals.Add (new GLib.Value (objekt));
				}
				CreateNativeObject ((string[])names.ToArray (typeof (string)), (GLib.Value[])vals.ToArray (typeof (GLib.Value)));
				return;
			}
			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);
			IntPtr native_expression = GLib.Marshaller.StringToPtrGStrdup (expression);
			Raw = cpg_property_new(native_name, native_expression, (int) flags, objekt == null ? IntPtr.Zero : objekt.Handle);
			GLib.Marshaller.Free (native_name);
			GLib.Marshaller.Free (native_expression);
		}

		[DllImport("cpg-network-2.0")]
		static extern int cpg_property_get_flags(IntPtr raw);

		[DllImport("cpg-network-2.0")]
		static extern void cpg_property_set_flags(IntPtr raw, int flags);

		[GLib.Property ("flags")]
		public Cpg.PropertyFlags Flags {
			get  {
				int raw_ret = cpg_property_get_flags(Handle);
				Cpg.PropertyFlags ret = (Cpg.PropertyFlags) raw_ret;
				return ret;
			}
			set  {
				cpg_property_set_flags(Handle, (int) value);
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_property_get_expression(IntPtr raw);

		[DllImport("cpg-network-2.0")]
		static extern void cpg_property_set_expression(IntPtr raw, IntPtr expression);

		[GLib.Property ("expression")]
		public Cpg.Expression Expression {
			get  {
				IntPtr raw_ret = cpg_property_get_expression(Handle);
				Cpg.Expression ret = GLib.Object.GetObject(raw_ret) as Cpg.Expression;
				return ret;
			}
			set  {
				cpg_property_set_expression(Handle, value == null ? IntPtr.Zero : value.Handle);
			}
		}

		[GLib.Property ("object")]
		public Cpg.Object Object {
			get {
				GLib.Value val = GetProperty ("object");
				Cpg.Object ret = (Cpg.Object) val;
				val.Dispose ();
				return ret;
			}
			set {
				GLib.Value val = new GLib.Value(value);
				SetProperty("object", val);
				val.Dispose ();
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_property_get_name(IntPtr raw);

		[GLib.Property ("name")]
		public string Name {
			get  {
				IntPtr raw_ret = cpg_property_get_name(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern double cpg_property_get_update(IntPtr raw);

		[DllImport("cpg-network-2.0")]
		static extern void cpg_property_set_update(IntPtr raw, double value);

		public double Update { 
			get {
				double raw_ret = cpg_property_get_update(Handle);
				double ret = raw_ret;
				return ret;
			}
			set {
				cpg_property_set_update(Handle, value);
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern int cpg_property_flags_from_string(IntPtr flags);

		public static Cpg.PropertyFlags FlagsFromString(string flags) {
			IntPtr native_flags = GLib.Marshaller.StringToPtrGStrdup (flags);
			int raw_ret = cpg_property_flags_from_string(native_flags);
			Cpg.PropertyFlags ret = (Cpg.PropertyFlags) raw_ret;
			GLib.Marshaller.Free (native_flags);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_property_remove_flags(IntPtr raw, int flags);

		public void RemoveFlags(Cpg.PropertyFlags flags) {
			cpg_property_remove_flags(Handle, (int) flags);
		}

		[DllImport("cpg-network-2.0")]
		static extern bool cpg_property_equal(IntPtr raw, IntPtr other);

		public bool Equal(Cpg.Property other) {
			bool raw_ret = cpg_property_equal(Handle, other == null ? IntPtr.Zero : other.Handle);
			bool ret = raw_ret;
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern bool cpg_property_get_integrated(IntPtr raw);

		[DllImport("cpg-network-2.0")]
		static extern void cpg_property_set_integrated(IntPtr raw, bool integrated);

		public bool Integrated { 
			get {
				bool raw_ret = cpg_property_get_integrated(Handle);
				bool ret = raw_ret;
				return ret;
			}
			set {
				cpg_property_set_integrated(Handle, value);
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_property_add_flags(IntPtr raw, int flags);

		public void AddFlags(Cpg.PropertyFlags flags) {
			cpg_property_add_flags(Handle, (int) flags);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_property_flags_to_string(int flags);

		public static string FlagsToString(Cpg.PropertyFlags flags) {
			IntPtr raw_ret = cpg_property_flags_to_string((int) flags);
			string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern uint cpg_property_get_used(IntPtr raw);

		public uint Used { 
			get {
				uint raw_ret = cpg_property_get_used(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_property_reset(IntPtr raw);

		public void Reset() {
			cpg_property_reset(Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_property_get_full_name(IntPtr raw);

		public string FullName { 
			get {
				IntPtr raw_ret = cpg_property_get_full_name(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_property_reset_cache(IntPtr raw);

		public void ResetCache() {
			cpg_property_reset_cache(Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern double cpg_property_get_value(IntPtr raw);

		[DllImport("cpg-network-2.0")]
		static extern void cpg_property_set_value(IntPtr raw, double value);

		public double Value { 
			get {
				double raw_ret = cpg_property_get_value(Handle);
				double ret = raw_ret;
				return ret;
			}
			set {
				cpg_property_set_value(Handle, value);
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_property_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = cpg_property_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

#endregion
	}
}
