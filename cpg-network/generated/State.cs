// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cpg {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class State : Cpg.Object {

		[Obsolete]
		protected State(GLib.GType gtype) : base(gtype) {}
		public State(IntPtr raw) : base(raw) {}

		[DllImport("cpg-network-1.0")]
		static extern IntPtr cpg_state_new(IntPtr id);

		public State (string id) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (State)) {
				ArrayList vals = new ArrayList();
				ArrayList names = new ArrayList();
				names.Add ("id");
				vals.Add (new GLib.Value (id));
				CreateNativeObject ((string[])names.ToArray (typeof (string)), (GLib.Value[])vals.ToArray (typeof (GLib.Value)));
				return;
			}
			IntPtr native_id = GLib.Marshaller.StringToPtrGStrdup (id);
			Raw = cpg_state_new(native_id);
			GLib.Marshaller.Free (native_id);
		}

		[DllImport("cpg-network-1.0")]
		static extern IntPtr cpg_state_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = cpg_state_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

#endregion
	}
}
