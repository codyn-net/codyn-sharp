// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cpg {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class OperatorData : GLib.Opaque {

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_operator_data_init(IntPtr raw, IntPtr expressions);

		public Cpg.OperatorData Init(GLib.SList expressions) {
			IntPtr raw_ret = cpg_operator_data_init(Handle, expressions == null ? IntPtr.Zero : expressions.Handle);
			Cpg.OperatorData ret = raw_ret == IntPtr.Zero ? null : (Cpg.OperatorData) GLib.Opaque.GetOpaque (raw_ret, typeof (Cpg.OperatorData), false);
			return ret;
		}

		public OperatorData(IntPtr raw) : base(raw) {}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_operator_data_destroy(IntPtr raw);

		protected override void Free (IntPtr raw)
		{
			cpg_operator_data_destroy (raw);
		}

		class FinalizerInfo {
			IntPtr handle;

			public FinalizerInfo (IntPtr handle)
			{
				this.handle = handle;
			}

			public bool Handler ()
			{
				cpg_operator_data_destroy (handle);
				return false;
			}
		}

		~OperatorData ()
		{
			if (!Owned)
				return;
			FinalizerInfo info = new FinalizerInfo (Handle);
			GLib.Timeout.Add (50, new GLib.TimeoutHandler (info.Handler));
		}

#endregion
	}
}
