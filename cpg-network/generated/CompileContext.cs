// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cpg {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class CompileContext : GLib.Object {

		[Obsolete]
		protected CompileContext(GLib.GType gtype) : base(gtype) {}
		public CompileContext(IntPtr raw) : base(raw) {}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_compile_context_new();

		public CompileContext () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (CompileContext)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = cpg_compile_context_new();
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_compile_context_append_object(IntPtr raw, IntPtr objekt);

		public void AppendObject(Cpg.Object objekt) {
			cpg_compile_context_append_object(Handle, objekt == null ? IntPtr.Zero : objekt.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_compile_context_get_operators(IntPtr raw);

		public Cpg.Operator[] Operators { 
			get {
				IntPtr raw_ret = cpg_compile_context_get_operators(Handle);
				Cpg.Operator[] ret = (Cpg.Operator[]) GLib.Marshaller.ListPtrToArray (raw_ret, typeof(GLib.SList), false, false, typeof(Cpg.Operator));
				return ret;
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_compile_context_set_operators(IntPtr raw, IntPtr operators);

		public void SetOperators(GLib.SList operators) {
			cpg_compile_context_set_operators(Handle, operators == null ? IntPtr.Zero : operators.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_compile_context_lookup_property(IntPtr raw);

		public Cpg.Property LookupProperty() {
			IntPtr raw_ret = cpg_compile_context_lookup_property(Handle);
			Cpg.Property ret = GLib.Object.GetObject(raw_ret) as Cpg.Property;
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_compile_context_get_objects(IntPtr raw);

		public Cpg.Object[] Objects { 
			get {
				IntPtr raw_ret = cpg_compile_context_get_objects(Handle);
				Cpg.Object[] ret = (Cpg.Object[]) GLib.Marshaller.ListPtrToArray (raw_ret, typeof(GLib.SList), false, false, typeof(Cpg.Object));
				return ret;
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_compile_context_prepend_object(IntPtr raw, IntPtr objekt);

		public void PrependObject(Cpg.Object objekt) {
			cpg_compile_context_prepend_object(Handle, objekt == null ? IntPtr.Zero : objekt.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_compile_context_lookup_function(IntPtr raw);

		public Cpg.Function LookupFunction() {
			IntPtr raw_ret = cpg_compile_context_lookup_function(Handle);
			Cpg.Function ret = GLib.Object.GetObject(raw_ret) as Cpg.Function;
			return ret;
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_compile_context_save(IntPtr raw);

		public void Save() {
			cpg_compile_context_save(Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern void cpg_compile_context_restore(IntPtr raw);

		public void Restore() {
			cpg_compile_context_restore(Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_compile_context_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = cpg_compile_context_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_compile_context_lookup_operator(IntPtr raw, IntPtr name);

		public Cpg.Operator LookupOperator(string name) {
			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);
			IntPtr raw_ret = cpg_compile_context_lookup_operator(Handle, native_name);
			Cpg.Operator ret = Cpg.OperatorAdapter.GetObject (raw_ret, false);
			GLib.Marshaller.Free (native_name);
			return ret;
		}

#endregion
#region Customized extensions
#line 1 "CompileContext.custom"
		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_compile_context_get_functions(IntPtr raw);

		[DllImport("cpg-network-2.0")]
		static extern void cpg_compile_context_set_functions(IntPtr raw, IntPtr functions);

		public Cpg.Function[] Functions
		{
			get
			{
				IntPtr raw_ret = cpg_compile_context_get_functions(Handle);

				Cpg.Function[] ret;

				ret = (Cpg.Function[]) GLib.Marshaller.ListPtrToArray (raw_ret, typeof(GLib.SList), false, false, typeof(Cpg.Function));

				return ret;
			}
			set
			{
				using (GLib.SList slist = new GLib.SList(value, typeof(Cpg.Function), true, false))
				{
					cpg_compile_context_set_functions(Handle, slist.Handle);
				}
			}
		}

#endregion
	}
}
