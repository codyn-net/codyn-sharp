// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cpg {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class FunctionArgument : GLib.Opaque {

		[DllImport("cpg-network-1.0")]
		static extern IntPtr cpg_function_argument_get_property(IntPtr raw);

		public Cpg.Property Property { 
			get {
				IntPtr raw_ret = cpg_function_argument_get_property(Handle);
				Cpg.Property ret = raw_ret == IntPtr.Zero ? null : (Cpg.Property) GLib.Opaque.GetOpaque (raw_ret, typeof (Cpg.Property), false);
				return ret;
			}
		}

		[DllImport("cpg-network-1.0")]
		static extern IntPtr cpg_function_argument_get_type();

		public static GLib.GType GType { 
			get {
				IntPtr raw_ret = cpg_function_argument_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("cpg-network-1.0")]
		static extern bool cpg_function_argument_get_optional(IntPtr raw);

		public bool Optional { 
			get {
				bool raw_ret = cpg_function_argument_get_optional(Handle);
				bool ret = raw_ret;
				return ret;
			}
		}

		[DllImport("cpg-network-1.0")]
		static extern double cpg_function_argument_get_default_value(IntPtr raw);

		public double DefaultValue { 
			get {
				double raw_ret = cpg_function_argument_get_default_value(Handle);
				double ret = raw_ret;
				return ret;
			}
		}

		[DllImport("cpg-network-1.0")]
		static extern IntPtr cpg_function_argument_get_name(IntPtr raw);

		public string Name { 
			get {
				IntPtr raw_ret = cpg_function_argument_get_name(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		public FunctionArgument(IntPtr raw) : base(raw) {}

		[DllImport("cpg-network-1.0")]
		static extern IntPtr cpg_function_argument_new(IntPtr name, bool optional, double def);

		public FunctionArgument (string name, bool optional, double def) 
		{
			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);
			Raw = cpg_function_argument_new(native_name, optional, def);
			GLib.Marshaller.Free (native_name);
		}

#endregion
	}
}
