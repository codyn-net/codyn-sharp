// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cpg {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class InstructionProperty : Cpg.Instruction {

		[Obsolete]
		protected InstructionProperty(GLib.GType gtype) : base(gtype) {}
		public InstructionProperty(IntPtr raw) : base(raw) {}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_instruction_property_new(IntPtr property, int binding);

		public InstructionProperty (Cpg.Property property, Cpg.InstructionPropertyBinding binding) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (InstructionProperty)) {
				throw new InvalidOperationException ("Can't override this constructor.");
			}
			Raw = cpg_instruction_property_new(property == null ? IntPtr.Zero : property.Handle, (int) binding);
		}

		[DllImport("cpg-network-2.0")]
		static extern int cpg_instruction_property_get_binding(IntPtr raw);

		[DllImport("cpg-network-2.0")]
		static extern void cpg_instruction_property_set_binding(IntPtr raw, int binding);

		public Cpg.InstructionPropertyBinding Binding { 
			get {
				int raw_ret = cpg_instruction_property_get_binding(Handle);
				Cpg.InstructionPropertyBinding ret = (Cpg.InstructionPropertyBinding) raw_ret;
				return ret;
			}
			set {
				cpg_instruction_property_set_binding(Handle, (int) value);
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_instruction_property_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = cpg_instruction_property_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_instruction_property_get_property(IntPtr raw);

		[DllImport("cpg-network-2.0")]
		static extern void cpg_instruction_property_set_property(IntPtr raw, IntPtr property);

		public Cpg.Property Property { 
			get {
				IntPtr raw_ret = cpg_instruction_property_get_property(Handle);
				Cpg.Property ret = GLib.Object.GetObject(raw_ret) as Cpg.Property;
				return ret;
			}
			set {
				cpg_instruction_property_set_property(Handle, value == null ? IntPtr.Zero : value.Handle);
			}
		}

#endregion
	}
}
