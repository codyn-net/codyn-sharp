// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cpg {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class InstructionCustomOperator : Cpg.Instruction {

		[Obsolete]
		protected InstructionCustomOperator(GLib.GType gtype) : base(gtype) {}
		public InstructionCustomOperator(IntPtr raw) : base(raw) {}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_instruction_custom_operator_new(IntPtr op);

		public InstructionCustomOperator (Cpg.Operator op) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (InstructionCustomOperator)) {
				throw new InvalidOperationException ("Can't override this constructor.");
			}
			Raw = cpg_instruction_custom_operator_new(op == null ? IntPtr.Zero : op.Handle);
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_instruction_custom_operator_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = cpg_instruction_custom_operator_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("cpg-network-2.0")]
		static extern IntPtr cpg_instruction_custom_operator_get_operator(IntPtr raw);

		public Cpg.Operator Operator { 
			get {
				IntPtr raw_ret = cpg_instruction_custom_operator_get_operator(Handle);
				Cpg.Operator ret = GLib.Object.GetObject(raw_ret) as Cpg.Operator;
				return ret;
			}
		}

#endregion
	}
}
