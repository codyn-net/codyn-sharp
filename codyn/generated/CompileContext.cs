// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cdn {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class CompileContext : GLib.Object {

		[Obsolete]
		protected CompileContext(GLib.GType gtype) : base(gtype) {}
		public CompileContext(IntPtr raw) : base(raw) {}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_compile_context_new();

		public CompileContext () : base (IntPtr.Zero)
		{
			if (GetType () != typeof (CompileContext)) {
				CreateNativeObject (new string [0], new GLib.Value[0]);
				return;
			}
			Raw = cdn_compile_context_new();
		}

		[DllImport("codyn-3.0")]
		static extern void cdn_compile_context_append_object(IntPtr raw, IntPtr objekt);

		public void AppendObject(Cdn.Object objekt) {
			cdn_compile_context_append_object(Handle, objekt == null ? IntPtr.Zero : objekt.Handle);
		}

		[DllImport("codyn-3.0")]
		static extern void cdn_compile_context_save(IntPtr raw);

		public void Save() {
			cdn_compile_context_save(Handle);
		}

		[DllImport("codyn-3.0")]
		static extern void cdn_compile_context_prepend_object(IntPtr raw, IntPtr objekt);

		public void PrependObject(Cdn.Object objekt) {
			cdn_compile_context_prepend_object(Handle, objekt == null ? IntPtr.Zero : objekt.Handle);
		}

		[DllImport("codyn-3.0")]
		static extern bool cdn_compile_context_get_function_arg_priority(IntPtr raw);

		[DllImport("codyn-3.0")]
		static extern void cdn_compile_context_set_function_arg_priority(IntPtr raw, bool prio);

		public bool FunctionArgPriority { 
			get {
				bool raw_ret = cdn_compile_context_get_function_arg_priority(Handle);
				bool ret = raw_ret;
				return ret;
			}
			set {
				cdn_compile_context_set_function_arg_priority(Handle, value);
			}
		}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_compile_context_get_objects(IntPtr raw);

		public Cdn.Object[] Objects { 
			get {
				IntPtr raw_ret = cdn_compile_context_get_objects(Handle);
				Cdn.Object[] ret = (Cdn.Object[]) GLib.Marshaller.ListPtrToArray (raw_ret, typeof(GLib.SList), false, false, typeof(Cdn.Object));
				return ret;
			}
		}

		[DllImport("codyn-3.0")]
		static extern bool cdn_compile_context_get_function_ref_priority(IntPtr raw);

		[DllImport("codyn-3.0")]
		static extern void cdn_compile_context_set_function_ref_priority(IntPtr raw, bool prio);

		public bool FunctionRefPriority { 
			get {
				bool raw_ret = cdn_compile_context_get_function_ref_priority(Handle);
				bool ret = raw_ret;
				return ret;
			}
			set {
				cdn_compile_context_set_function_ref_priority(Handle, value);
			}
		}

		[DllImport("codyn-3.0")]
		static extern void cdn_compile_context_append_function(IntPtr raw, IntPtr function);

		public void AppendFunction(Cdn.Function function) {
			cdn_compile_context_append_function(Handle, function == null ? IntPtr.Zero : function.Handle);
		}

		[DllImport("codyn-3.0")]
		static extern void cdn_compile_context_prepend_function(IntPtr raw, IntPtr function);

		public void PrependFunction(Cdn.Function function) {
			cdn_compile_context_prepend_function(Handle, function == null ? IntPtr.Zero : function.Handle);
		}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_compile_context_lookup_variable(IntPtr raw, IntPtr name);

		public Cdn.Variable LookupVariable(string name) {
			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);
			IntPtr raw_ret = cdn_compile_context_lookup_variable(Handle, native_name);
			Cdn.Variable ret = raw_ret == IntPtr.Zero ? null : (Cdn.Variable) GLib.Opaque.GetOpaque (raw_ret, typeof (Cdn.Variable), false);
			GLib.Marshaller.Free (native_name);
			return ret;
		}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_compile_context_lookup_function(IntPtr raw);

		public Cdn.Function LookupFunction() {
			IntPtr raw_ret = cdn_compile_context_lookup_function(Handle);
			Cdn.Function ret = GLib.Object.GetObject(raw_ret) as Cdn.Function;
			return ret;
		}

		[DllImport("codyn-3.0")]
		static extern void cdn_compile_context_restore(IntPtr raw);

		public void Restore() {
			cdn_compile_context_restore(Handle);
		}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_compile_context_get_functions(IntPtr raw);

		public Cdn.Function[] Functions { 
			get {
				IntPtr raw_ret = cdn_compile_context_get_functions(Handle);
				Cdn.Function[] ret = (Cdn.Function[]) GLib.Marshaller.ListPtrToArray (raw_ret, typeof(GLib.SList), false, false, typeof(Cdn.Function));
				return ret;
			}
		}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_compile_context_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = cdn_compile_context_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_compile_context_lookup_function(IntPtr raw, IntPtr name);

		public Cdn.Function LookupFunction(string name) {
			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);
			IntPtr raw_ret = cdn_compile_context_lookup_function(Handle, native_name);
			Cdn.Function ret = GLib.Object.GetObject(raw_ret) as Cdn.Function;
			GLib.Marshaller.Free (native_name);
			return ret;
		}

#endregion
	}
}
