// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cdn {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class InstructionNumber : Cdn.Instruction {

		[Obsolete]
		protected InstructionNumber(GLib.GType gtype) : base(gtype) {}
		public InstructionNumber(IntPtr raw) : base(raw) {}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_instruction_number_new(double value);

		public InstructionNumber (double value) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (InstructionNumber)) {
				throw new InvalidOperationException ("Can't override this constructor.");
			}
			Raw = cdn_instruction_number_new(value);
		}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_instruction_number_new_from_string(IntPtr repr);

		public InstructionNumber (string repr) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (InstructionNumber)) {
				throw new InvalidOperationException ("Can't override this constructor.");
			}
			IntPtr native_repr = GLib.Marshaller.StringToPtrGStrdup (repr);
			Raw = cdn_instruction_number_new_from_string(native_repr);
			GLib.Marshaller.Free (native_repr);
		}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_instruction_number_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = cdn_instruction_number_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("codyn-3.0")]
		static extern double cdn_instruction_number_get_value(IntPtr raw);

		[DllImport("codyn-3.0")]
		static extern void cdn_instruction_number_set_value(IntPtr raw, double value);

		public double Value { 
			get {
				double raw_ret = cdn_instruction_number_get_value(Handle);
				double ret = raw_ret;
				return ret;
			}
			set {
				cdn_instruction_number_set_value(Handle, value);
			}
		}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_instruction_number_get_representation(IntPtr raw);

		[DllImport("codyn-3.0")]
		static extern void cdn_instruction_number_set_representation(IntPtr raw, IntPtr repr);

		public string Representation { 
			get {
				IntPtr raw_ret = cdn_instruction_number_get_representation(Handle);
				string ret = GLib.Marshaller.PtrToStringGFree(raw_ret);
				return ret;
			}
			set {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				cdn_instruction_number_set_representation(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}

#endregion
	}
}
