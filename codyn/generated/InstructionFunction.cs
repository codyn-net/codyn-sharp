// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Cdn {

	using System;
	using System.Collections;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public class InstructionFunction : Cdn.Instruction {

		[Obsolete]
		protected InstructionFunction(GLib.GType gtype) : base(gtype) {}
		public InstructionFunction(IntPtr raw) : base(raw) {}

		protected InstructionFunction() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_instruction_function_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = cdn_instruction_function_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_instruction_function_get_name(IntPtr raw);

		[DllImport("codyn-3.0")]
		static extern void cdn_instruction_function_set_name(IntPtr raw, IntPtr name);

		public string Name { 
			get {
				IntPtr raw_ret = cdn_instruction_function_get_name(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
			set {
				IntPtr native_value = GLib.Marshaller.StringToPtrGStrdup (value);
				cdn_instruction_function_set_name(Handle, native_value);
				GLib.Marshaller.Free (native_value);
			}
		}

		[DllImport("codyn-3.0")]
		static extern uint cdn_instruction_function_get_id(IntPtr raw);

		public uint Id { 
			get {
				uint raw_ret = cdn_instruction_function_get_id(Handle);
				uint ret = raw_ret;
				return ret;
			}
		}

#endregion
#region Customized extensions
#line 1 "InstructionFunction.custom"
		[DllImport("codyn-3.0")]
		static extern IntPtr cdn_instruction_function_new(uint id, IntPtr name, IntPtr argdim);

		public InstructionFunction (uint id, string name, int numargs) : base (IntPtr.Zero)
		{
			if (GetType () != typeof (InstructionFunction))
			{
				throw new InvalidOperationException ("Can't override this constructor.");
			}

			IntPtr native_name = GLib.Marshaller.StringToPtrGStrdup (name);

			var argdim = new Cdn.StackArgs(numargs);
			Raw = cdn_instruction_function_new(id, native_name, argdim.Handle);

			GLib.Marshaller.Free (native_name);
		}

#endregion
	}
}
